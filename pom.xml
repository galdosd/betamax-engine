<?xml version="1.0" encoding="UTF-8"?>
<!--
    TODO
        Working set features
            Do FPS correctly
            Frame control / pause / fast forward
            Display list of sprites and their current moments
            Single button to tag a moment on the disk file?
            Managed state, just integers
            Rewind
        Backlog features
            Sound
            Saving/Loading state
            Fancy mouse cursor
            Sprite positions
            Advance sprite frame / pause sprite execution
            Fancy framebuffer CRT style post effects
            basic steam support
            osx support
            steam achievements

        Maintenance
            Refactoring
            Triage TODOs
            Enforce glossary terms / reify as objects for type safety ;)
            static analysis
            Windows testing

        Testing
            Generic end to end test?
            Timing/choreography/FPS invariants. We already had at least one bug on that

        Performance
            Pre-process textures so program load time is short (LZ4)
            Possibly store texture compressed in memory to save main RAM (LZ4)
            Separate sprites into dayparts so we can load them in chunks rather than all at load time

        Scripter features
            Pause logical time whenever loading templates / use loading screen
            Optionally log all handled events
            "this" sprite reference / replace_sprite()
            Optional sprite name for when sprite name = sprite template name
            sprites magic dict so that renaming works better maybe?
            sprite prefix scopes so everything in one file can ignore a prefix like m2?

     GLOSSARY
        Global clock frame (clock frame)
        Sprite moment (rendered frame)
        Sprite
        Sprite template
        Sprite name



-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.github.galdosd.betamax</groupId>
    <artifactId>betamax-engine</artifactId>
    <version>1.0-SNAPSHOT-${lwjgl.natives}</version>
    <properties>
        <lwjgl.version>3.1.6</lwjgl.version>
        <metrics.version>4.0.0</metrics.version>
        <lwjgl.natives>natives-windows</lwjgl.natives>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
    </properties>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifest>
                            <mainClass>com.github.galdosd.betamax.BetamaxGlProgram</mainClass>
                        </manifest>
                    </archive>
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id> <!-- this is used for inheritance merges -->
                        <phase>package</phase> <!-- bind to the packaging phase -->
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <!-- FIXME include user-facing documentation to comply with OSS licenses
             that require eg, putting a disclaimer stating the license etc -->
        <!-- FIXME update our dependencies -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.16.6</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>19.0</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.1.3</version>
        </dependency>
        <dependency>
            <groupId>com.twelvemonkeys.imageio</groupId>
            <artifactId>imageio-tiff</artifactId>
            <version>3.3.2</version>
        </dependency>
        <dependency>
            <groupId>io.dropwizard.metrics</groupId>
            <artifactId>metrics-core</artifactId>
            <version>${metrics.version}</version>
        </dependency>
        <dependency>
            <groupId>org.reflections</groupId>
            <artifactId>reflections</artifactId>
            <version>0.9.11</version>
        </dependency>
        <dependency>
            <groupId>org.python</groupId>
            <artifactId>jython-standalone</artifactId>
            <version>2.7.1</version>
        </dependency>

        <!-- all the lwjgl crap -->
        <dependency>
            <groupId>org.lwjgl</groupId>
            <artifactId>lwjgl</artifactId>
            <version>${lwjgl.version}</version>
        </dependency>
        <dependency>
            <groupId>org.lwjgl</groupId>
            <artifactId>lwjgl-glfw</artifactId>
            <version>${lwjgl.version}</version>
        </dependency>
        <dependency>
            <groupId>org.lwjgl</groupId>
            <artifactId>lwjgl-opengl</artifactId>
            <version>${lwjgl.version}</version>
        </dependency>
        <dependency>
            <groupId>org.lwjgl</groupId>
            <artifactId>lwjgl</artifactId>
            <version>${lwjgl.version}</version>
            <classifier>${lwjgl.natives}</classifier>
        </dependency>
        <dependency>
            <groupId>org.lwjgl</groupId>
            <artifactId>lwjgl-glfw</artifactId>
            <version>${lwjgl.version}</version>
            <classifier>${lwjgl.natives}</classifier>
        </dependency>
        <dependency>
            <groupId>org.lwjgl</groupId>
            <artifactId>lwjgl-opengl</artifactId>
            <version>${lwjgl.version}</version>
            <classifier>${lwjgl.natives}</classifier>
        </dependency>
        <!-- TODO do we want lwjgl-jemalloc for performance or something? who cares? -->
        <!-- FIXME specify versions of maven plugins! reproducible builds! -->
    </dependencies>
</project>